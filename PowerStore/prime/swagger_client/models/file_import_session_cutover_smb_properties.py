# coding: utf-8

"""
    PowerStore REST API

    Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )  # noqa: E501

    OpenAPI spec version: 3.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from prime.swagger_client.configuration import Configuration


class FileImportSessionCutoverSmbProperties(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'is_standalone': 'bool',
        'computer_name': 'str',
        'domain': 'str',
        'organizational_unit': 'str',
        'netbios_name': 'str',
        'workgroup': 'str'
    }

    attribute_map = {
        'is_standalone': 'is_standalone',
        'computer_name': 'computer_name',
        'domain': 'domain',
        'organizational_unit': 'organizational_unit',
        'netbios_name': 'netbios_name',
        'workgroup': 'workgroup'
    }

    def __init__(self, is_standalone=None, computer_name=None, domain=None, organizational_unit=None, netbios_name=None, workgroup=None, _configuration=None):  # noqa: E501
        """FileImportSessionCutoverSmbProperties - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._is_standalone = None
        self._computer_name = None
        self._domain = None
        self._organizational_unit = None
        self._netbios_name = None
        self._workgroup = None
        self.discriminator = None

        if is_standalone is not None:
            self.is_standalone = is_standalone
        if computer_name is not None:
            self.computer_name = computer_name
        if domain is not None:
            self.domain = domain
        if organizational_unit is not None:
            self.organizational_unit = organizational_unit
        if netbios_name is not None:
            self.netbios_name = netbios_name
        if workgroup is not None:
            self.workgroup = workgroup

    @property
    def is_standalone(self):
        """Gets the is_standalone of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        Indicates whether the source SMB server is standalone. A 'true' value indicated the SMB server is standalone and 'false' value indicates the SMB server is joined to an Active Directory.  # noqa: E501

        :return: The is_standalone of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: bool
        """
        return self._is_standalone

    @is_standalone.setter
    def is_standalone(self, is_standalone):
        """Sets the is_standalone of this FileImportSessionCutoverSmbProperties.

        Indicates whether the source SMB server is standalone. A 'true' value indicated the SMB server is standalone and 'false' value indicates the SMB server is joined to an Active Directory.  # noqa: E501

        :param is_standalone: The is_standalone of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: bool
        """

        self._is_standalone = is_standalone

    @property
    def computer_name(self):
        """Gets the computer_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        DNS name of the associated computer account when the source SMB server is joined to an Active Directory domain. This name is limited to 63 characters and must not contain the following characters:   - comma (,)   - tilde (~)   - colon (:)   - exclamation point (!)   - at sign (@)   - number sign (#)   - dollar sign ($)   - percent (%)   - caret (^)   - ampersand (&)   - apostrophe (')   - period (.) - note that if you enter string with period only the first word will be kept   - parentheses (())   - braces ({})   - white space (blank) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) Underscore (_) is allowed. However it is not recommended to use it. Hyphen-minus sign (-) is not allowed as last character. When creating/modifying the SMB server, if no NetBIOS name is provided, up to the 15 first computer name characters will be used to compute a default NetBIOS name. This substring shall comply with NetBIOS name limitations.  # noqa: E501

        :return: The computer_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: str
        """
        return self._computer_name

    @computer_name.setter
    def computer_name(self, computer_name):
        """Sets the computer_name of this FileImportSessionCutoverSmbProperties.

        DNS name of the associated computer account when the source SMB server is joined to an Active Directory domain. This name is limited to 63 characters and must not contain the following characters:   - comma (,)   - tilde (~)   - colon (:)   - exclamation point (!)   - at sign (@)   - number sign (#)   - dollar sign ($)   - percent (%)   - caret (^)   - ampersand (&)   - apostrophe (')   - period (.) - note that if you enter string with period only the first word will be kept   - parentheses (())   - braces ({})   - white space (blank) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) Underscore (_) is allowed. However it is not recommended to use it. Hyphen-minus sign (-) is not allowed as last character. When creating/modifying the SMB server, if no NetBIOS name is provided, up to the 15 first computer name characters will be used to compute a default NetBIOS name. This substring shall comply with NetBIOS name limitations.  # noqa: E501

        :param computer_name: The computer_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                computer_name is not None and len(computer_name) > 63):
            raise ValueError("Invalid value for `computer_name`, length must be less than or equal to `63`")  # noqa: E501
        if (self._configuration.client_side_validation and
                computer_name is not None and len(computer_name) < 1):
            raise ValueError("Invalid value for `computer_name`, length must be greater than or equal to `1`")  # noqa: E501

        self._computer_name = computer_name

    @property
    def domain(self):
        """Gets the domain of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        Fully Qualified Domain Name (FQDN) where SMB server is registered in Active Directory. The maximum length is 255 characters. A FQDN is composed with multiple components separated by a dot character. The FQDN for the SMB server computer name is computer_name. where the computer_name is the first component. Domain must not contain the following characters:   - comma (,)   - tilde (~)   - colon (:)   - exclamation point (!)   - at sign (@)   - number sign (#)   - dollar sign ($)   - percent (%)   - caret (^)   - ampersand (&)   - apostrophe (')   - parentheses (())   - braces ({})   - white space (blank) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) Underscore (_) is allowed. However it is not recommended to use it. Hyphen-minus sign (-) is not allowed as last character. Period (.) is not allowed as first and last character.  # noqa: E501

        :return: The domain of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this FileImportSessionCutoverSmbProperties.

        Fully Qualified Domain Name (FQDN) where SMB server is registered in Active Directory. The maximum length is 255 characters. A FQDN is composed with multiple components separated by a dot character. The FQDN for the SMB server computer name is computer_name. where the computer_name is the first component. Domain must not contain the following characters:   - comma (,)   - tilde (~)   - colon (:)   - exclamation point (!)   - at sign (@)   - number sign (#)   - dollar sign ($)   - percent (%)   - caret (^)   - ampersand (&)   - apostrophe (')   - parentheses (())   - braces ({})   - white space (blank) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) Underscore (_) is allowed. However it is not recommended to use it. Hyphen-minus sign (-) is not allowed as last character. Period (.) is not allowed as first and last character.  # noqa: E501

        :param domain: The domain of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                domain is not None and len(domain) > 255):
            raise ValueError("Invalid value for `domain`, length must be less than or equal to `255`")  # noqa: E501
        if (self._configuration.client_side_validation and
                domain is not None and len(domain) < 1):
            raise ValueError("Invalid value for `domain`, length must be greater than or equal to `1`")  # noqa: E501

        self._domain = domain

    @property
    def organizational_unit(self):
        """Gets the organizational_unit of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        Organizational unit of the source SMB server in Active Directory, if applicable.  # noqa: E501

        :return: The organizational_unit of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: str
        """
        return self._organizational_unit

    @organizational_unit.setter
    def organizational_unit(self, organizational_unit):
        """Sets the organizational_unit of this FileImportSessionCutoverSmbProperties.

        Organizational unit of the source SMB server in Active Directory, if applicable.  # noqa: E501

        :param organizational_unit: The organizational_unit of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                organizational_unit is not None and len(organizational_unit) < 1):
            raise ValueError("Invalid value for `organizational_unit`, length must be greater than or equal to `1`")  # noqa: E501

        self._organizational_unit = organizational_unit

    @property
    def netbios_name(self):
        """Gets the netbios_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        NetBIOS name is the network name of the standalone SMB server. SMB server joined to Active Directory also have NetBIOS name, defaulted to the 15 first characters of the computerName attribute. Administrators can specify a custom NetBIOS name for a SMB server using this attribute. NetBIOS name must not contain the following characters:   - backslash (\\)   - slash mark (/)   - colon (:)   - asterisk (*)   - question mark (?)   - quotation mark (\")   - less than sign (<)   - greater than sign (>)   - vertical bar (|) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) The following characters are not allowed too:   - semicolon (;)   - comma (,)   - equal sign (=)   - plus sign (+)   - left bracket ([)   - right bracket (])  The following characters are not allowed as first character:   - period (.)   - white space (blank)   - hyphen-minus (-)   - at sign (@)  Source system may apply additional restrictions. For example the source system may prohibit the following characters:   - white space (blank)  # noqa: E501

        :return: The netbios_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: str
        """
        return self._netbios_name

    @netbios_name.setter
    def netbios_name(self, netbios_name):
        """Sets the netbios_name of this FileImportSessionCutoverSmbProperties.

        NetBIOS name is the network name of the standalone SMB server. SMB server joined to Active Directory also have NetBIOS name, defaulted to the 15 first characters of the computerName attribute. Administrators can specify a custom NetBIOS name for a SMB server using this attribute. NetBIOS name must not contain the following characters:   - backslash (\\)   - slash mark (/)   - colon (:)   - asterisk (*)   - question mark (?)   - quotation mark (\")   - less than sign (<)   - greater than sign (>)   - vertical bar (|) as defined by the Microsoft naming convention (see https://support.microsoft.com/en-us/help/909264/) The following characters are not allowed too:   - semicolon (;)   - comma (,)   - equal sign (=)   - plus sign (+)   - left bracket ([)   - right bracket (])  The following characters are not allowed as first character:   - period (.)   - white space (blank)   - hyphen-minus (-)   - at sign (@)  Source system may apply additional restrictions. For example the source system may prohibit the following characters:   - white space (blank)  # noqa: E501

        :param netbios_name: The netbios_name of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                netbios_name is not None and len(netbios_name) > 15):
            raise ValueError("Invalid value for `netbios_name`, length must be less than or equal to `15`")  # noqa: E501
        if (self._configuration.client_side_validation and
                netbios_name is not None and len(netbios_name) < 1):
            raise ValueError("Invalid value for `netbios_name`, length must be greater than or equal to `1`")  # noqa: E501

        self._netbios_name = netbios_name

    @property
    def workgroup(self):
        """Gets the workgroup of this FileImportSessionCutoverSmbProperties.  # noqa: E501

        Applies to standalone SMB servers Only. Windows network workgroup for the SMB server. Workgroup Names are limited to 15 alphanumeric ASCII charaters and must not contain the following characters:   - backslash (\\)   - slash mark (/)   - colon (:)   - asterisk (*)   - question mark (?)   - quotation mark (\")   - less than sign (<)   - greater than sign (>)   - vertical bar (|) The following characters are not allowed as first character:   - period (.)   - white space (blank)  Source system may apply additional restrictions. For example the source system may prohibit the following characters:   - comma (,)   - white space (blank)  # noqa: E501

        :return: The workgroup of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :rtype: str
        """
        return self._workgroup

    @workgroup.setter
    def workgroup(self, workgroup):
        """Sets the workgroup of this FileImportSessionCutoverSmbProperties.

        Applies to standalone SMB servers Only. Windows network workgroup for the SMB server. Workgroup Names are limited to 15 alphanumeric ASCII charaters and must not contain the following characters:   - backslash (\\)   - slash mark (/)   - colon (:)   - asterisk (*)   - question mark (?)   - quotation mark (\")   - less than sign (<)   - greater than sign (>)   - vertical bar (|) The following characters are not allowed as first character:   - period (.)   - white space (blank)  Source system may apply additional restrictions. For example the source system may prohibit the following characters:   - comma (,)   - white space (blank)  # noqa: E501

        :param workgroup: The workgroup of this FileImportSessionCutoverSmbProperties.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                workgroup is not None and len(workgroup) > 15):
            raise ValueError("Invalid value for `workgroup`, length must be less than or equal to `15`")  # noqa: E501
        if (self._configuration.client_side_validation and
                workgroup is not None and len(workgroup) < 1):
            raise ValueError("Invalid value for `workgroup`, length must be greater than or equal to `1`")  # noqa: E501

        self._workgroup = workgroup

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(FileImportSessionCutoverSmbProperties, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, FileImportSessionCutoverSmbProperties):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, FileImportSessionCutoverSmbProperties):
            return True

        return self.to_dict() != other.to_dict()
