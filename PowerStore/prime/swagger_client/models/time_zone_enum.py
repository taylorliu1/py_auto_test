# coding: utf-8

"""
    PowerStore REST API

    Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )  # noqa: E501

    OpenAPI spec version: 3.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from prime.swagger_client.configuration import Configuration


class TimeZoneEnum(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ETC__GMT_PLUS_12 = "Etc__GMT_plus_12"
    US__SAMOA = "US__Samoa"
    ETC__GMT_PLUS_11 = "Etc__GMT_plus_11"
    AMERICA__ATKA = "America__Atka"
    US__HAWAII = "US__Hawaii"
    ETC__GMT_PLUS_10 = "Etc__GMT_plus_10"
    PACIFIC__MARQUESAS = "Pacific__Marquesas"
    US__ALASKA = "US__Alaska"
    PACIFIC__GAMBIER = "Pacific__Gambier"
    ETC__GMT_PLUS_9 = "Etc__GMT_plus_9"
    PST8PDT = "PST8PDT"
    PACIFIC__PITCAIRN = "Pacific__Pitcairn"
    US__PACIFIC = "US__Pacific"
    ETC__GMT_PLUS_8 = "Etc__GMT_plus_8"
    MEXICO__BAJASUR = "Mexico__BajaSur"
    AMERICA__BOISE = "America__Boise"
    AMERICA__PHOENIX = "America__Phoenix"
    MST7MDT = "MST7MDT"
    ETC__GMT_PLUS_7 = "Etc__GMT_plus_7"
    CST6CDT = "CST6CDT"
    AMERICA__CHICAGO = "America__Chicago"
    CANADA__SASKATCHEWAN = "Canada__Saskatchewan"
    AMERICA__BAHIA_BANDERAS = "America__Bahia_Banderas"
    ETC__GMT_PLUS_6 = "Etc__GMT_plus_6"
    CHILE__EASTERISLAND = "Chile__EasterIsland"
    AMERICA__BOGOTA = "America__Bogota"
    AMERICA__NEW_YORK = "America__New_York"
    EST5EDT = "EST5EDT"
    AMERICA__HAVANA = "America__Havana"
    ETC__GMT_PLUS_5 = "Etc__GMT_plus_5"
    AMERICA__CARACAS = "America__Caracas"
    AMERICA__CUIABA = "America__Cuiaba"
    AMERICA__SANTO_DOMINGO = "America__Santo_Domingo"
    CANADA__ATLANTIC = "Canada__Atlantic"
    AMERICA__ASUNCION = "America__Asuncion"
    ETC__GMT_PLUS_4 = "Etc__GMT_plus_4"
    CANADA__NEWFOUNDLAND = "Canada__Newfoundland"
    CHILE__CONTINENTAL = "Chile__Continental"
    BRAZIL__EAST = "Brazil__East"
    AMERICA__GODTHAB = "America__Godthab"
    AMERICA__MIQUELON = "America__Miquelon"
    AMERICA__BUENOS_AIRES = "America__Buenos_Aires"
    ETC__GMT_PLUS_3 = "Etc__GMT_plus_3"
    AMERICA__NORONHA = "America__Noronha"
    ETC__GMT_PLUS_2 = "Etc__GMT_plus_2"
    AMERICA__SCORESBYSUND = "America__Scoresbysund"
    ATLANTIC__CAPE_VERDE = "Atlantic__Cape_Verde"
    ETC__GMT_PLUS_1 = "Etc__GMT_plus_1"
    UTC = "UTC"
    EUROPE__LONDON = "Europe__London"
    AFRICA__CASABLANCA = "Africa__Casablanca"
    ATLANTIC__REYKJAVIK = "Atlantic__Reykjavik"
    ANTARCTICA__TROLL = "Antarctica__Troll"
    EUROPE__PARIS = "Europe__Paris"
    EUROPE__SARAJEVO = "Europe__Sarajevo"
    EUROPE__BELGRADE = "Europe__Belgrade"
    EUROPE__ROME = "Europe__Rome"
    AFRICA__TUNIS = "Africa__Tunis"
    ETC__GMT_MINUS_1 = "Etc__GMT_minus_1"
    ASIA__GAZA = "Asia__Gaza"
    EUROPE__BUCHAREST = "Europe__Bucharest"
    EUROPE__HELSINKI = "Europe__Helsinki"
    ASIA__BEIRUT = "Asia__Beirut"
    AFRICA__HARARE = "Africa__Harare"
    ASIA__DAMASCUS = "Asia__Damascus"
    ASIA__AMMAN = "Asia__Amman"
    EUROPE__TIRASPOL = "Europe__Tiraspol"
    ASIA__JERUSALEM = "Asia__Jerusalem"
    ETC__GMT_MINUS_2 = "Etc__GMT_minus_2"
    ASIA__BAGHDAD = "Asia__Baghdad"
    AFRICA__ASMERA = "Africa__Asmera"
    ETC__GMT_MINUS_3 = "Etc__GMT_minus_3"
    ASIA__TEHRAN = "Asia__Tehran"
    ASIA__BAKU = "Asia__Baku"
    ETC__GMT_MINUS_4 = "Etc__GMT_minus_4"
    ASIA__KABUL = "Asia__Kabul"
    ASIA__KARACHI = "Asia__Karachi"
    ETC__GMT_MINUS_5 = "Etc__GMT_minus_5"
    ASIA__KOLKATA = "Asia__Kolkata"
    ASIA__KATMANDU = "Asia__Katmandu"
    ASIA__ALMATY = "Asia__Almaty"
    ETC__GMT_MINUS_6 = "Etc__GMT_minus_6"
    ASIA__RANGOON = "Asia__Rangoon"
    ASIA__HOVD = "Asia__Hovd"
    ASIA__BANGKOK = "Asia__Bangkok"
    ETC__GMT_MINUS_7 = "Etc__GMT_minus_7"
    ASIA__HONG_KONG = "Asia__Hong_Kong"
    ASIA__BRUNEI = "Asia__Brunei"
    ASIA__SINGAPORE = "Asia__Singapore"
    ETC__GMT_MINUS_8 = "Etc__GMT_minus_8"
    ASIA__PYONGYANG = "Asia__Pyongyang"
    AUSTRALIA__EUCLA = "Australia__Eucla"
    ASIA__SEOUL = "Asia__Seoul"
    ETC__GMT_MINUS_9 = "Etc__GMT_minus_9"
    AUSTRALIA__DARWIN = "Australia__Darwin"
    AUSTRALIA__ADELAIDE = "Australia__Adelaide"
    AUSTRALIA__SYDNEY = "Australia__Sydney"
    AUSTRALIA__BRISBANE = "Australia__Brisbane"
    ASIA__MAGADAN = "Asia__Magadan"
    ETC__GMT_MINUS_10 = "Etc__GMT_minus_10"
    AUSTRALIA__LORD_HOWE = "Australia__Lord_Howe"
    ETC__GMT_MINUS_11 = "Etc__GMT_minus_11"
    ASIA__KAMCHATKA = "Asia__Kamchatka"
    PACIFIC__FIJI = "Pacific__Fiji"
    ANTARCTICA__SOUTH_POLE = "Antarctica__South_Pole"
    ETC__GMT_MINUS_12 = "Etc__GMT_minus_12"
    PACIFIC__CHATHAM = "Pacific__Chatham"
    PACIFIC__TONGATAPU = "Pacific__Tongatapu"
    PACIFIC__APIA = "Pacific__Apia"
    ETC__GMT_MINUS_13 = "Etc__GMT_minus_13"
    PACIFIC__KIRITIMATI = "Pacific__Kiritimati"
    ETC__GMT_MINUS_14 = "Etc__GMT_minus_14"

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
    }

    attribute_map = {
    }

    def __init__(self, _configuration=None):  # noqa: E501
        """TimeZoneEnum - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(TimeZoneEnum, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, TimeZoneEnum):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, TimeZoneEnum):
            return True

        return self.to_dict() != other.to_dict()
