# coding: utf-8

"""
    PowerStore REST API

    Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )  # noqa: E501

    OpenAPI spec version: 3.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from prime.swagger_client.configuration import Configuration


class EventInstance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'event_code': 'str',
        'severity': 'SeverityEnum',
        'resource_type': 'ResourceTypeEnum',
        'resource_id': 'str',
        'resource_name': 'str',
        'generated_timestamp': 'datetime',
        'description_l10n': 'str',
        'system_impact_l10n': 'str',
        'repair_flow_l10n': 'str',
        'severity_l10n': 'str',
        'resource_type_l10n': 'str'
    }

    attribute_map = {
        'id': 'id',
        'event_code': 'event_code',
        'severity': 'severity',
        'resource_type': 'resource_type',
        'resource_id': 'resource_id',
        'resource_name': 'resource_name',
        'generated_timestamp': 'generated_timestamp',
        'description_l10n': 'description_l10n',
        'system_impact_l10n': 'system_impact_l10n',
        'repair_flow_l10n': 'repair_flow_l10n',
        'severity_l10n': 'severity_l10n',
        'resource_type_l10n': 'resource_type_l10n'
    }

    def __init__(self, id=None, event_code=None, severity=None, resource_type=None, resource_id=None, resource_name=None, generated_timestamp=None, description_l10n=None, system_impact_l10n=None, repair_flow_l10n=None, severity_l10n=None, resource_type_l10n=None, _configuration=None):  # noqa: E501
        """EventInstance - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._event_code = None
        self._severity = None
        self._resource_type = None
        self._resource_id = None
        self._resource_name = None
        self._generated_timestamp = None
        self._description_l10n = None
        self._system_impact_l10n = None
        self._repair_flow_l10n = None
        self._severity_l10n = None
        self._resource_type_l10n = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if event_code is not None:
            self.event_code = event_code
        if severity is not None:
            self.severity = severity
        if resource_type is not None:
            self.resource_type = resource_type
        if resource_id is not None:
            self.resource_id = resource_id
        if resource_name is not None:
            self.resource_name = resource_name
        if generated_timestamp is not None:
            self.generated_timestamp = generated_timestamp
        if description_l10n is not None:
            self.description_l10n = description_l10n
        if system_impact_l10n is not None:
            self.system_impact_l10n = system_impact_l10n
        if repair_flow_l10n is not None:
            self.repair_flow_l10n = repair_flow_l10n
        if severity_l10n is not None:
            self.severity_l10n = severity_l10n
        if resource_type_l10n is not None:
            self.resource_type_l10n = resource_type_l10n

    @property
    def id(self):
        """Gets the id of this EventInstance.  # noqa: E501

        Unique identifier of this occurrence of an event.  # noqa: E501

        :return: The id of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EventInstance.

        Unique identifier of this occurrence of an event.  # noqa: E501

        :param id: The id of this EventInstance.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def event_code(self):
        """Gets the event_code of this EventInstance.  # noqa: E501

        Identifies the specific kind of event that has occurred.  # noqa: E501

        :return: The event_code of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._event_code

    @event_code.setter
    def event_code(self, event_code):
        """Sets the event_code of this EventInstance.

        Identifies the specific kind of event that has occurred.  # noqa: E501

        :param event_code: The event_code of this EventInstance.  # noqa: E501
        :type: str
        """

        self._event_code = event_code

    @property
    def severity(self):
        """Gets the severity of this EventInstance.  # noqa: E501

        The severity of the event.  # noqa: E501

        :return: The severity of this EventInstance.  # noqa: E501
        :rtype: SeverityEnum
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this EventInstance.

        The severity of the event.  # noqa: E501

        :param severity: The severity of this EventInstance.  # noqa: E501
        :type: SeverityEnum
        """

        self._severity = severity

    @property
    def resource_type(self):
        """Gets the resource_type of this EventInstance.  # noqa: E501

        The type of the object which generated this event.  # noqa: E501

        :return: The resource_type of this EventInstance.  # noqa: E501
        :rtype: ResourceTypeEnum
        """
        return self._resource_type

    @resource_type.setter
    def resource_type(self, resource_type):
        """Sets the resource_type of this EventInstance.

        The type of the object which generated this event.  # noqa: E501

        :param resource_type: The resource_type of this EventInstance.  # noqa: E501
        :type: ResourceTypeEnum
        """

        self._resource_type = resource_type

    @property
    def resource_id(self):
        """Gets the resource_id of this EventInstance.  # noqa: E501

        Unique identifier of the resource instance which generated this event.  # noqa: E501

        :return: The resource_id of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._resource_id

    @resource_id.setter
    def resource_id(self, resource_id):
        """Sets the resource_id of this EventInstance.

        Unique identifier of the resource instance which generated this event.  # noqa: E501

        :param resource_id: The resource_id of this EventInstance.  # noqa: E501
        :type: str
        """

        self._resource_id = resource_id

    @property
    def resource_name(self):
        """Gets the resource_name of this EventInstance.  # noqa: E501

        Name of the resource instance which generated this event.  This property supports case-insensitive filtering.  # noqa: E501

        :return: The resource_name of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._resource_name

    @resource_name.setter
    def resource_name(self, resource_name):
        """Sets the resource_name of this EventInstance.

        Name of the resource instance which generated this event.  This property supports case-insensitive filtering.  # noqa: E501

        :param resource_name: The resource_name of this EventInstance.  # noqa: E501
        :type: str
        """

        self._resource_name = resource_name

    @property
    def generated_timestamp(self):
        """Gets the generated_timestamp of this EventInstance.  # noqa: E501

        Timestamp at which this event occured.  # noqa: E501

        :return: The generated_timestamp of this EventInstance.  # noqa: E501
        :rtype: datetime
        """
        return self._generated_timestamp

    @generated_timestamp.setter
    def generated_timestamp(self, generated_timestamp):
        """Sets the generated_timestamp of this EventInstance.

        Timestamp at which this event occured.  # noqa: E501

        :param generated_timestamp: The generated_timestamp of this EventInstance.  # noqa: E501
        :type: datetime
        """

        self._generated_timestamp = generated_timestamp

    @property
    def description_l10n(self):
        """Gets the description_l10n of this EventInstance.  # noqa: E501

        Description of this event.  # noqa: E501

        :return: The description_l10n of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._description_l10n

    @description_l10n.setter
    def description_l10n(self, description_l10n):
        """Sets the description_l10n of this EventInstance.

        Description of this event.  # noqa: E501

        :param description_l10n: The description_l10n of this EventInstance.  # noqa: E501
        :type: str
        """

        self._description_l10n = description_l10n

    @property
    def system_impact_l10n(self):
        """Gets the system_impact_l10n of this EventInstance.  # noqa: E501

        Describes the possible effect on the system of this event.  # noqa: E501

        :return: The system_impact_l10n of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._system_impact_l10n

    @system_impact_l10n.setter
    def system_impact_l10n(self, system_impact_l10n):
        """Sets the system_impact_l10n of this EventInstance.

        Describes the possible effect on the system of this event.  # noqa: E501

        :param system_impact_l10n: The system_impact_l10n of this EventInstance.  # noqa: E501
        :type: str
        """

        self._system_impact_l10n = system_impact_l10n

    @property
    def repair_flow_l10n(self):
        """Gets the repair_flow_l10n of this EventInstance.  # noqa: E501

        Suggestions for how to resolve any problems that may arise from this event.  # noqa: E501

        :return: The repair_flow_l10n of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._repair_flow_l10n

    @repair_flow_l10n.setter
    def repair_flow_l10n(self, repair_flow_l10n):
        """Sets the repair_flow_l10n of this EventInstance.

        Suggestions for how to resolve any problems that may arise from this event.  # noqa: E501

        :param repair_flow_l10n: The repair_flow_l10n of this EventInstance.  # noqa: E501
        :type: str
        """

        self._repair_flow_l10n = repair_flow_l10n

    @property
    def severity_l10n(self):
        """Gets the severity_l10n of this EventInstance.  # noqa: E501

        Localized message string corresponding to severity  # noqa: E501

        :return: The severity_l10n of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._severity_l10n

    @severity_l10n.setter
    def severity_l10n(self, severity_l10n):
        """Sets the severity_l10n of this EventInstance.

        Localized message string corresponding to severity  # noqa: E501

        :param severity_l10n: The severity_l10n of this EventInstance.  # noqa: E501
        :type: str
        """

        self._severity_l10n = severity_l10n

    @property
    def resource_type_l10n(self):
        """Gets the resource_type_l10n of this EventInstance.  # noqa: E501

        Localized message string corresponding to resource_type  # noqa: E501

        :return: The resource_type_l10n of this EventInstance.  # noqa: E501
        :rtype: str
        """
        return self._resource_type_l10n

    @resource_type_l10n.setter
    def resource_type_l10n(self, resource_type_l10n):
        """Sets the resource_type_l10n of this EventInstance.

        Localized message string corresponding to resource_type  # noqa: E501

        :param resource_type_l10n: The resource_type_l10n of this EventInstance.  # noqa: E501
        :type: str
        """

        self._resource_type_l10n = resource_type_l10n

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EventInstance, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EventInstance):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, EventInstance):
            return True

        return self.to_dict() != other.to_dict()
