# coding: utf-8

"""
    PowerStore REST API

    Storage cluster REST API definition. ( For \"Try It Out\", use the cluster management IP address to load this swaggerui interface. )  # noqa: E501

    OpenAPI spec version: 3.0.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from prime.swagger_client.configuration import Configuration


class ImportHostSystemInstance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'agent_address': 'str',
        'agent_type': 'HostAgentTypeEnum',
        'agent_port': 'int',
        'agent_version': 'str',
        'agent_api_version': 'str',
        'os_type': 'HAOSTypeEnum',
        'os_version': 'str',
        'agent_status': 'HostAgentStatusEnum',
        'user_name': 'str',
        'last_update_time': 'datetime',
        'agent_type_l10n': 'str',
        'os_type_l10n': 'str',
        'agent_status_l10n': 'str',
        'hosts': 'list[HostInstance]'
    }

    attribute_map = {
        'id': 'id',
        'agent_address': 'agent_address',
        'agent_type': 'agent_type',
        'agent_port': 'agent_port',
        'agent_version': 'agent_version',
        'agent_api_version': 'agent_api_version',
        'os_type': 'os_type',
        'os_version': 'os_version',
        'agent_status': 'agent_status',
        'user_name': 'user_name',
        'last_update_time': 'last_update_time',
        'agent_type_l10n': 'agent_type_l10n',
        'os_type_l10n': 'os_type_l10n',
        'agent_status_l10n': 'agent_status_l10n',
        'hosts': 'hosts'
    }

    def __init__(self, id=None, agent_address=None, agent_type=None, agent_port=None, agent_version=None, agent_api_version=None, os_type=None, os_version=None, agent_status=None, user_name=None, last_update_time=None, agent_type_l10n=None, os_type_l10n=None, agent_status_l10n=None, hosts=None, _configuration=None):  # noqa: E501
        """ImportHostSystemInstance - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._agent_address = None
        self._agent_type = None
        self._agent_port = None
        self._agent_version = None
        self._agent_api_version = None
        self._os_type = None
        self._os_version = None
        self._agent_status = None
        self._user_name = None
        self._last_update_time = None
        self._agent_type_l10n = None
        self._os_type_l10n = None
        self._agent_status_l10n = None
        self._hosts = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if agent_address is not None:
            self.agent_address = agent_address
        if agent_type is not None:
            self.agent_type = agent_type
        if agent_port is not None:
            self.agent_port = agent_port
        if agent_version is not None:
            self.agent_version = agent_version
        if agent_api_version is not None:
            self.agent_api_version = agent_api_version
        if os_type is not None:
            self.os_type = os_type
        if os_version is not None:
            self.os_version = os_version
        if agent_status is not None:
            self.agent_status = agent_status
        if user_name is not None:
            self.user_name = user_name
        if last_update_time is not None:
            self.last_update_time = last_update_time
        if agent_type_l10n is not None:
            self.agent_type_l10n = agent_type_l10n
        if os_type_l10n is not None:
            self.os_type_l10n = os_type_l10n
        if agent_status_l10n is not None:
            self.agent_status_l10n = agent_status_l10n
        if hosts is not None:
            self.hosts = hosts

    @property
    def id(self):
        """Gets the id of this ImportHostSystemInstance.  # noqa: E501

        Unique identifier of the import host system.  # noqa: E501

        :return: The id of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ImportHostSystemInstance.

        Unique identifier of the import host system.  # noqa: E501

        :param id: The id of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def agent_address(self):
        """Gets the agent_address of this ImportHostSystemInstance.  # noqa: E501

        Hostname or IPv4 address of the import host system.  # noqa: E501

        :return: The agent_address of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._agent_address

    @agent_address.setter
    def agent_address(self, agent_address):
        """Sets the agent_address of this ImportHostSystemInstance.

        Hostname or IPv4 address of the import host system.  # noqa: E501

        :param agent_address: The agent_address of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._agent_address = agent_address

    @property
    def agent_type(self):
        """Gets the agent_type of this ImportHostSystemInstance.  # noqa: E501


        :return: The agent_type of this ImportHostSystemInstance.  # noqa: E501
        :rtype: HostAgentTypeEnum
        """
        return self._agent_type

    @agent_type.setter
    def agent_type(self, agent_type):
        """Sets the agent_type of this ImportHostSystemInstance.


        :param agent_type: The agent_type of this ImportHostSystemInstance.  # noqa: E501
        :type: HostAgentTypeEnum
        """

        self._agent_type = agent_type

    @property
    def agent_port(self):
        """Gets the agent_port of this ImportHostSystemInstance.  # noqa: E501

        TCP port on the import host system.  # noqa: E501

        :return: The agent_port of this ImportHostSystemInstance.  # noqa: E501
        :rtype: int
        """
        return self._agent_port

    @agent_port.setter
    def agent_port(self, agent_port):
        """Sets the agent_port of this ImportHostSystemInstance.

        TCP port on the import host system.  # noqa: E501

        :param agent_port: The agent_port of this ImportHostSystemInstance.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                agent_port is not None and agent_port > 2147483647):  # noqa: E501
            raise ValueError("Invalid value for `agent_port`, must be a value less than or equal to `2147483647`")  # noqa: E501
        if (self._configuration.client_side_validation and
                agent_port is not None and agent_port < 0):  # noqa: E501
            raise ValueError("Invalid value for `agent_port`, must be a value greater than or equal to `0`")  # noqa: E501

        self._agent_port = agent_port

    @property
    def agent_version(self):
        """Gets the agent_version of this ImportHostSystemInstance.  # noqa: E501

        Version of the import host system.  # noqa: E501

        :return: The agent_version of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._agent_version

    @agent_version.setter
    def agent_version(self, agent_version):
        """Sets the agent_version of this ImportHostSystemInstance.

        Version of the import host system.  # noqa: E501

        :param agent_version: The agent_version of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._agent_version = agent_version

    @property
    def agent_api_version(self):
        """Gets the agent_api_version of this ImportHostSystemInstance.  # noqa: E501

        API version of the import host system.  # noqa: E501

        :return: The agent_api_version of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._agent_api_version

    @agent_api_version.setter
    def agent_api_version(self, agent_api_version):
        """Sets the agent_api_version of this ImportHostSystemInstance.

        API version of the import host system.  # noqa: E501

        :param agent_api_version: The agent_api_version of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._agent_api_version = agent_api_version

    @property
    def os_type(self):
        """Gets the os_type of this ImportHostSystemInstance.  # noqa: E501


        :return: The os_type of this ImportHostSystemInstance.  # noqa: E501
        :rtype: HAOSTypeEnum
        """
        return self._os_type

    @os_type.setter
    def os_type(self, os_type):
        """Sets the os_type of this ImportHostSystemInstance.


        :param os_type: The os_type of this ImportHostSystemInstance.  # noqa: E501
        :type: HAOSTypeEnum
        """

        self._os_type = os_type

    @property
    def os_version(self):
        """Gets the os_version of this ImportHostSystemInstance.  # noqa: E501

        Operating system version of the import host system.  # noqa: E501

        :return: The os_version of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._os_version

    @os_version.setter
    def os_version(self, os_version):
        """Sets the os_version of this ImportHostSystemInstance.

        Operating system version of the import host system.  # noqa: E501

        :param os_version: The os_version of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._os_version = os_version

    @property
    def agent_status(self):
        """Gets the agent_status of this ImportHostSystemInstance.  # noqa: E501


        :return: The agent_status of this ImportHostSystemInstance.  # noqa: E501
        :rtype: HostAgentStatusEnum
        """
        return self._agent_status

    @agent_status.setter
    def agent_status(self, agent_status):
        """Sets the agent_status of this ImportHostSystemInstance.


        :param agent_status: The agent_status of this ImportHostSystemInstance.  # noqa: E501
        :type: HostAgentStatusEnum
        """

        self._agent_status = agent_status

    @property
    def user_name(self):
        """Gets the user_name of this ImportHostSystemInstance.  # noqa: E501

        Username for the import host system.  # noqa: E501

        :return: The user_name of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this ImportHostSystemInstance.

        Username for the import host system.  # noqa: E501

        :param user_name: The user_name of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._user_name = user_name

    @property
    def last_update_time(self):
        """Gets the last_update_time of this ImportHostSystemInstance.  # noqa: E501

        Time when the import host system was last updated.  # noqa: E501

        :return: The last_update_time of this ImportHostSystemInstance.  # noqa: E501
        :rtype: datetime
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this ImportHostSystemInstance.

        Time when the import host system was last updated.  # noqa: E501

        :param last_update_time: The last_update_time of this ImportHostSystemInstance.  # noqa: E501
        :type: datetime
        """

        self._last_update_time = last_update_time

    @property
    def agent_type_l10n(self):
        """Gets the agent_type_l10n of this ImportHostSystemInstance.  # noqa: E501

        Localized message string corresponding to agent_type  # noqa: E501

        :return: The agent_type_l10n of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._agent_type_l10n

    @agent_type_l10n.setter
    def agent_type_l10n(self, agent_type_l10n):
        """Sets the agent_type_l10n of this ImportHostSystemInstance.

        Localized message string corresponding to agent_type  # noqa: E501

        :param agent_type_l10n: The agent_type_l10n of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._agent_type_l10n = agent_type_l10n

    @property
    def os_type_l10n(self):
        """Gets the os_type_l10n of this ImportHostSystemInstance.  # noqa: E501

        Localized message string corresponding to os_type  # noqa: E501

        :return: The os_type_l10n of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._os_type_l10n

    @os_type_l10n.setter
    def os_type_l10n(self, os_type_l10n):
        """Sets the os_type_l10n of this ImportHostSystemInstance.

        Localized message string corresponding to os_type  # noqa: E501

        :param os_type_l10n: The os_type_l10n of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._os_type_l10n = os_type_l10n

    @property
    def agent_status_l10n(self):
        """Gets the agent_status_l10n of this ImportHostSystemInstance.  # noqa: E501

        Localized message string corresponding to agent_status  # noqa: E501

        :return: The agent_status_l10n of this ImportHostSystemInstance.  # noqa: E501
        :rtype: str
        """
        return self._agent_status_l10n

    @agent_status_l10n.setter
    def agent_status_l10n(self, agent_status_l10n):
        """Sets the agent_status_l10n of this ImportHostSystemInstance.

        Localized message string corresponding to agent_status  # noqa: E501

        :param agent_status_l10n: The agent_status_l10n of this ImportHostSystemInstance.  # noqa: E501
        :type: str
        """

        self._agent_status_l10n = agent_status_l10n

    @property
    def hosts(self):
        """Gets the hosts of this ImportHostSystemInstance.  # noqa: E501

        This is the inverse of the resource type host association.  # noqa: E501

        :return: The hosts of this ImportHostSystemInstance.  # noqa: E501
        :rtype: list[HostInstance]
        """
        return self._hosts

    @hosts.setter
    def hosts(self, hosts):
        """Sets the hosts of this ImportHostSystemInstance.

        This is the inverse of the resource type host association.  # noqa: E501

        :param hosts: The hosts of this ImportHostSystemInstance.  # noqa: E501
        :type: list[HostInstance]
        """

        self._hosts = hosts

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ImportHostSystemInstance, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ImportHostSystemInstance):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ImportHostSystemInstance):
            return True

        return self.to_dict() != other.to_dict()
